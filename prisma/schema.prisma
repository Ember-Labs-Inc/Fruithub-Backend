generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  name      String?
  gender    String
  role      String
  phone     String?
  bio       String?
  avatarUrl String?
  city      String?
  country   String?
  address   String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Order[]
  posts     Post[]
  products  Product[]
}

model Category {
  id          String    @id @default(uuid())
  name        String    @unique
  createdAt   DateTime  @default(now())
  image       String?
  description String?
  posts       Post[]
  products    Product[]
}

model Product {
  id          String      @id @default(uuid())
  title       String
  description String?
  price       Float
  images      String[]
  categoryId  String
  createdById String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isDeleted   Boolean     @default(false)
  slug        String      @unique
  status      String      @default("active")
  stock       Int         @default(0)
  orderItems  OrderItem[]
  category    Category    @relation(fields: [categoryId], references: [id])
  createdBy   User        @relation(fields: [createdById], references: [id])
}

model Post {
  id          String    @id @default(uuid())
  title       String
  slug        String    @unique
  content     String
  authorId    String
  categoryId  String
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation(fields: [authorId], references: [id])
  category    Category  @relation(fields: [categoryId], references: [id])
}

model Order {
  id          String      @id @default(uuid())
  userId      String
  totalAmount Float
  status      String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  user        User        @relation(fields: [userId], references: [id])
  items       OrderItem[]
}

model OrderItem {
  id        String  @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  unitPrice Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}
